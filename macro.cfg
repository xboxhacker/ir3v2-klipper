# All gcode macros for xboxhacker/ir3v2-klipper

[gcode_macro dump_belt]
gcode:
    SET_KINEMATIC_POSITION X=0 Y=0 Z=0
    G0 Z350 F500 #dump the print from the belt

[gcode_macro M109]
rename_existing: M99109
gcode:
    {% set s = params.S|float %}
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}
    {% endif %}

[gcode_macro M190]
rename_existing: M99190
gcode:
    {% set s = params.S|float %}
    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s} MAXIMUM={s+1}
    {% endif %}

[gcode_macro LED_ON]
gcode:
    SET_LED LED=led WHITE=1

[gcode_macro CALIBRATE]
gcode:
    G28
    BED_MESH_CALIBRATE

[gcode_macro Resonance_Compensation]
gcode:
    G90
    G28
    G0 Z20.00 X125.0 Y175.0 F5000
    SHAPER_CALIBRATE
    SAVE_CONFIG

#[gcode_macro PRINT_START]
#gcode:
#    G90
#    M82
#    G21
#    G28
#    G1 Y20 F500

[gcode_macro PRINT_END]
gcode:
    M400
    G28 X
    M104 S0
    M140 S0
    G92 E0
    G1 E-5 F300
    G4 P7000
    G28
    G1 Y50 F1000
    M107
    M84
    FMS_off

[gcode_macro PID_EXTRUDER]
gcode:
    PID_CALIBRATE HEATER=extruder TARGET=200

[gcode_macro PID_BED]
gcode:
    PID_CALIBRATE HEATER=heater_bed TARGET=60

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    M104 S0
    M140 S0
    M107
    G1 X0 F2000
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    G28
    G1 Y50 F1000
    BASE_CANCEL_PRINT
    FMS_off

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
variable_extruder_temp: 0
gcode:
    FMS_off
    SET_GCODE_VARIABLE MACRO=PAUSE VARIABLE=extruder_temp VALUE={printer.extruder.target}
    {% set x = params.X|default(0) %}
    {% set e = params.E|default(2) %}
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{e} F2100
    G90
    G1 X{x} F6000
    G91
    G1 Y10
    G90
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0 #Turn off the stepper for E while we wait

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    M109 S{printer["gcode_macro PAUSE"].extruder_temp}
    G91
    G1 E10 F900
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED=100
    BASE_RESUME
    {% if printer['filament_motion_sensor encoder_sensor'].filament_detected != True %}
    RESPOND MSG="No filament present, aborting resume!"
    {% endif %}
    FMS_on

[gcode_macro Y_Offset_UP]
gcode:
    SET_GCODE_OFFSET Y_ADJUST=+0.05 MOVE=0

[gcode_macro Y_Offset_DOWN]
description: Adjust Y offset. Usage: Y_Offset_DOWN [Y_ADJUST=-0.05] [MOVE=0]
gcode:
    {% set y_adj = params.Y_ADJUST|default(-0.05)|float %}
    {% set move = params.MOVE|default(0)|int %}
    SET_GCODE_OFFSET Y_ADJUST={y_adj} MOVE={move}

[gcode_macro Y_Offset_RESET]
gcode:
    SET_GCODE_OFFSET Y_ADJUST=0 MOVE=0

[gcode_macro FMS_on]
gcode:
    M117 ENABLING the Filament Motion Sensor
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1

[gcode_macro FMS_off]
gcode:
    M117 DISABLING the Filament Motion Sensor
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0

[gcode_macro LOAD_FILAMENT]
variable_load_distance: 50
variable_purge_distance: 2
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity * 5 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E{load_distance} F{max_velocity}
    G1 E-{purge_distance} F{speed}
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance: 50
variable_purge_distance: 2
gcode:
    {% set speed = params.SPEED|default(500) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity * 5 %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E{purge_distance} F{speed}
    G1 E-{unload_distance} F{max_velocity}
    RESTORE_GCODE_STATE NAME=unload_state