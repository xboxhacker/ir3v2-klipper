# Z-Hop Retraction System for Orca Slicer - With Debugging
# Version: v3.3 - uses saved Z position to avoid stacking errors

[gcode_macro _RETRACTION_VARS]
variable_z_hop_height: 5.0
variable_z_hop_speed: 30
variable_retraction_threshold: 0.5
variable_is_retracted: False
variable_z_hop_enabled: True
variable_debug_enabled: False
variable_saved_z: 0.0
gcode:

[gcode_macro SET_Z_HOP]
description: Configure Z-hop parameters for retraction
gcode:
    {% set HEIGHT = params.HEIGHT|default(5.0)|float %}
    {% set SPEED = params.SPEED|default(30)|float %}
    {% set THRESHOLD = params.THRESHOLD|default(0.5)|float %}
    {% set ENABLE = params.ENABLE|default(1)|int %}
    {% set DEBUG = params.DEBUG|default(0)|int %}
    SET_GCODE_VARIABLE MACRO=_RETRACTION_VARS VARIABLE=z_hop_height VALUE={HEIGHT}
    SET_GCODE_VARIABLE MACRO=_RETRACTION_VARS VARIABLE=z_hop_speed VALUE={SPEED}
    SET_GCODE_VARIABLE MACRO=_RETRACTION_VARS VARIABLE=retraction_threshold VALUE={THRESHOLD}
    SET_GCODE_VARIABLE MACRO=_RETRACTION_VARS VARIABLE=z_hop_enabled VALUE={ENABLE}
    SET_GCODE_VARIABLE MACRO=_RETRACTION_VARS VARIABLE=debug_enabled VALUE={DEBUG}
    {% set en_str = "Enabled" if ENABLE else "Disabled" %}
    {% set dbg_str = "ON" if DEBUG else "OFF" %}
    RESPOND MSG="Z-hop configured: {en_str}, Height: {HEIGHT}mm, Speed: {SPEED}mm/s, Threshold: {THRESHOLD}mm, Debug: {dbg_str}"

[gcode_macro Z_HOP_DEBUG_ON]
gcode:
    SET_GCODE_VARIABLE MACRO=_RETRACTION_VARS VARIABLE=debug_enabled VALUE=1
    RESPOND MSG="Z-hop debugging ENABLED"

[gcode_macro Z_HOP_DEBUG_OFF]
gcode:
    SET_GCODE_VARIABLE MACRO=_RETRACTION_VARS VARIABLE=debug_enabled VALUE=0
    RESPOND MSG="Z-hop debugging DISABLED"

[gcode_macro _DEBUG_Z_POSITION]
gcode:
    {% set vars = printer["gcode_macro _RETRACTION_VARS"] %}
    {% if vars.debug_enabled %}
        {% set klipper_z = printer.toolhead.position.z %}
        {% set gcode_z = printer.gcode_move.position.z %}
        {% set message = params.MSG|default("Z-Position") %}
        RESPOND MSG="[Z-HOP DEBUG] {message}: Klipper Z={("%.3f"|format(klipper_z))}mm, G-code Z={("%.3f"|format(gcode_z))}mm"
    {% endif %}

[gcode_macro G1]
rename_existing: G1.1
gcode:
    {% set vars = printer["gcode_macro _RETRACTION_VARS"] %}
    {% if vars.z_hop_enabled and 'E' in params %}
        {% set e_value = params.E|float %}
        {% set current_e = printer.gcode_move.position.e %}
        {% if printer.gcode_move.absolute_extrude %}
            {% set e_diff = e_value - current_e %}
        {% else %}
            {% set e_diff = e_value %}
        {% endif %}
        {% if vars.debug_enabled %}
            {% set retracted_str = "Yes" if vars.is_retracted else "No" %}
            RESPOND MSG="[Z-HOP DEBUG] E movement detected: {("%.3f"|format(e_diff))}mm (threshold: {("%.3f"|format(vars.retraction_threshold))}mm, retracted: {retracted_str})"
        {% endif %}
        {% if e_diff <= -vars.retraction_threshold and not vars.is_retracted %}
            {% if vars.debug_enabled %}
                RESPOND MSG="[Z-HOP DEBUG] === RETRACTION DETECTED ==="
                _DEBUG_Z_POSITION MSG="Before retraction"
            {% endif %}
            {% set current_speed = printer.gcode_move.speed %}
            # Save current Z before hop
            SET_GCODE_VARIABLE MACRO=_RETRACTION_VARS VARIABLE=saved_z VALUE={printer.toolhead.position.z}
            G1.1 {rawparams}
            {% if vars.debug_enabled %}
                _DEBUG_Z_POSITION MSG="After retraction, before Z-hop"
            {% endif %}
            M400
            {% set current_coord_mode = printer.gcode_move.absolute_coordinates %}
            G91
            G1.1 Z{vars.z_hop_height} F{vars.z_hop_speed * 60}
            M400
            {% if vars.debug_enabled %}
                _DEBUG_Z_POSITION MSG="After Z-hop UP"
            {% endif %}
            {% if current_coord_mode %}
                G90
            {% endif %}
            G1.1 F{current_speed}
            SET_GCODE_VARIABLE MACRO=_RETRACTION_VARS VARIABLE=is_retracted VALUE=True
            {% if vars.debug_enabled %}
                RESPOND MSG="[Z-HOP DEBUG] Retraction complete, Z-hopped by {("%.3f"|format(vars.z_hop_height))}mm"
            {% endif %}
        {% elif e_diff >= vars.retraction_threshold and vars.is_retracted %}
            {% if vars.debug_enabled %}
                RESPOND MSG="[Z-HOP DEBUG] === UNRETRACTION DETECTED ==="
                _DEBUG_Z_POSITION MSG="Before Z-hop down"
            {% endif %}
            {% set current_speed = printer.gcode_move.speed %}
            {% set current_coord_mode = printer.gcode_move.absolute_coordinates %}
            # Move Z to saved_z before unretraction (absolute move)
            {% set saved_z = vars.saved_z|float %}
            G90
            G1.1 Z{saved_z} F{vars.z_hop_speed * 60}
            M400
            {% if vars.debug_enabled %}
                _DEBUG_Z_POSITION MSG="After Z-hop DOWN, before unretraction"
            {% endif %}
            G1.1 F{current_speed}
            G1.1 {rawparams}
            {% if vars.debug_enabled %}
                _DEBUG_Z_POSITION MSG="After unretraction"
                RESPOND MSG="[Z-HOP DEBUG] Unretraction complete, Z-hop cleared"
            {% endif %}
            SET_GCODE_VARIABLE MACRO=_RETRACTION_VARS VARIABLE=is_retracted VALUE=False
        {% else %}
            G1.1 {rawparams}
        {% endif %}
    {% else %}
        G1.1 {rawparams}
    {% endif %}

[gcode_macro Z_HOP_ON]
gcode:
    SET_GCODE_VARIABLE MACRO=_RETRACTION_VARS VARIABLE=z_hop_enabled VALUE=True
    RESPOND MSG="Z-hop enabled"

[gcode_macro Z_HOP_OFF]
gcode:
    SET_GCODE_VARIABLE MACRO=_RETRACTION_VARS VARIABLE=z_hop_enabled VALUE=False
    RESPOND MSG="Z-hop disabled"

[gcode_macro CLEAR_Z_HOP_STATE]
gcode:
    SET_GCODE_VARIABLE MACRO=_RETRACTION_VARS VARIABLE=is_retracted VALUE=False
    RESPOND MSG="Z-hop retraction state cleared"

[gcode_macro GET_Z_HOP]
gcode:
    {% set vars = printer["gcode_macro _RETRACTION_VARS"] %}
    {% set en_str = "Yes" if vars.z_hop_enabled else "No" %}
    {% set dbg_str = "ON" if vars.debug_enabled else "OFF" %}
    {% set retracted_str = "Yes" if vars.is_retracted else "No" %}
    RESPOND MSG="=== Z-hop Settings ==="
    RESPOND MSG="Enabled: {en_str}"
    RESPOND MSG="Height: {("%.3f"|format(vars.z_hop_height))}mm"
    RESPOND MSG="Speed: {("%.3f"|format(vars.z_hop_speed))}mm/s"
    RESPOND MSG="Retraction Threshold: {("%.3f"|format(vars.retraction_threshold))}mm"
    RESPOND MSG="Currently Retracted: {retracted_str}"
    RESPOND MSG="Debug Mode: {dbg_str}"
    _DEBUG_Z_POSITION MSG="Current position"

[gcode_macro EMERGENCY_CLEAR_Z_HOP]
gcode:
    {% set vars = printer["gcode_macro _RETRACTION_VARS"] %}
    {% if vars.is_retracted %}
        RESPOND MSG="Emergency clearing Z-hop - returning to original Z height"
        {% if vars.debug_enabled %}
            _DEBUG_Z_POSITION MSG="Before emergency clear"
        {% endif %}
        G90
        G1.1 Z{vars.saved_z} F{vars.z_hop_speed * 60}
        M400
        SET_GCODE_VARIABLE MACRO=_RETRACTION_VARS VARIABLE=is_retracted VALUE=False
        {% if vars.debug_enabled %}
            _DEBUG_Z_POSITION MSG="After emergency clear"
        {% endif %}
        RESPOND MSG="Z-hop cleared"
    {% else %}
        RESPOND MSG="No active Z-hop to clear"
    {% endif %}

[gcode_macro CHECK_Z_POSITION]
gcode:
    _DEBUG_Z_POSITION MSG="Manual check"